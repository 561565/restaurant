{"remainingRequest":"D:\\vue\\restaurant_p\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\restaurant_p\\src\\components\\home.vue?vue&type=template&id=957c9522&scoped=true&","dependencies":[{"path":"D:\\vue\\restaurant_p\\src\\components\\home.vue","mtime":1580868888774},{"path":"D:\\vue\\restaurant_p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\restaurant_p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\vue\\restaurant_p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\restaurant_p\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}