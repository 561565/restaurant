{"remainingRequest":"D:\\Vue项目\\restaurant_p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Vue项目\\restaurant_p\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Vue项目\\restaurant_p\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue项目\\restaurant_p\\src\\components\\VEheader.vue?vue&type=template&id=4b355c0c&scoped=true&","dependencies":[{"path":"D:\\Vue项目\\restaurant_p\\src\\components\\VEheader.vue","mtime":1589731572993},{"path":"D:\\Vue项目\\restaurant_p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue项目\\restaurant_p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Vue项目\\restaurant_p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue项目\\restaurant_p\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}